#lang racket
(define lower 1) ;; define usada para definir variáveis ou funcões. Define é similar ao Let.
(define upper 100) ;; define para variáveis globais e let para locais. let pode ser usada para atribuir
(define (guess) ;; Declarando função guess   ;; o valor de uma variável a outra usando o *let
  (quotient (+ lower upper) 2)) ;; quotient retorna o valor da divisão de dois números INTEIROS.
(define (smaller)
  (set! upper (max lower (sub1 (guess)))) ;; set! é um comando para alterar o valor de variáveis
  (guess))                                ;; em geral set! aparece como (set! variável expressão)
#|Nessa função (smaller) estamos setando o novo valor para upper.
(sub1 (guess)) faz com que seja subtraido 1 do valor calculado pela função guess.
(max x y) me da o valor máximo entre os dois valores. Logo upper será atualizado pelo valor de guess
menos 1.
|#
(define (bigger)
  (set! lower (min upper (add 1 (guess)))
  (guess))